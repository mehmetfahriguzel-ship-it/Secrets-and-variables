name: TRM Cloud Automation

on:
  workflow_dispatch:
  schedule:
    - cron: "0 */6 * * *"   # 6 saatte bir otomatik Ã§alÄ±ÅŸÄ±r

jobs:
  run-trm:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # ðŸ”¹ TEST PING: Telegram baÄŸlantÄ±sÄ±nÄ± doÄŸrula
      - name: Telegram test ping
        env:
          TELEGRAM_API_ID: ${{ secrets.TELEGRAM_API_ID }}
          TELEGRAM_API_HASH: ${{ secrets.TELEGRAM_API_HASH }}
          TELEGRAM_SESSION: ${{ secrets.TELEGRAM_SESSION }}
          TELEGRAM_DEST: ${{ secrets.TELEGRAM_DEST }}
        run: |
          python - <<'PY'
          import os, asyncio
          from telethon import TelegramClient
          from telethon.sessions import StringSession

          api_id = int(os.getenv("TELEGRAM_API_ID"))
          api_hash = os.getenv("TELEGRAM_API_HASH")
          session = os.getenv("TELEGRAM_SESSION")
          dest = os.getenv("TELEGRAM_DEST") or "me"   # yoksa Saved Messages

          async def main():
              async with TelegramClient(StringSession(session), api_id, api_hash) as client:
                  msg = "TRM test âœ… (workflowâ€™dan gÃ¶nderildi)"
                  await client.send_message(dest, msg)
                  print("SENT_OK ->", dest)

          asyncio.run(main())
          PY

      # ðŸ”¹ ÃœrÃ¼nleri tara ve gÃ¶nder
      - name: Scrape all products
        run: python trm_cloud/scraper.py

      - name: Post new products to Telegram
        env:
          TELEGRAM_API_ID: ${{ secrets.TELEGRAM_API_ID }}
          TELEGRAM_API_HASH: ${{ secrets.TELEGRAM_API_HASH }}
          TELEGRAM_SESSION: ${{ secrets.TELEGRAM_SESSION }}
          TELEGRAM_DEST: ${{ secrets.TELEGRAM_DEST }}
        run: python trm_cloud/post_telegram.py

      - name: Upload reports
        uses: actions/upload-artifact@v3
        with:
          name: trm-reports
          path: "*.csv"
